/*
 * Generated by Bluespec Compiler, version 2016.03.beta1 (build 34761, 2016-03-16)
 * 
 * On Fri Oct  7 22:57:30 IST 2016
 * 
 */

/* Generation options: keep-fires */
#ifndef __mkBBD_h__
#define __mkBBD_h__

#include "bluesim_types.h"
#include "bs_module.h"
#include "bluesim_primitives.h"
#include "bs_vcd.h"


/* Class declaration for the mkBBD module */
class MOD_mkBBD : public Module {
 
 /* Clock handles */
 private:
  tClock __clk_handle_0;
 
 /* Clock gate handles */
 public:
  tUInt8 *clk_gate[0];
 
 /* Instantiation parameters */
 public:
 
 /* Module state */
 public:
  MOD_Reg<tUInt32> INST_counter;
  MOD_Reg<tUInt32> INST_dataval;
  MOD_Fifo<tUInt32> INST_fifo_in;
  MOD_Fifo<tUInt32> INST_fifo_out;
  MOD_Reg<tUInt8> INST_matmult_finish;
  MOD_Reg<tUInt8> INST_matmult_m0_0;
  MOD_Reg<tUInt8> INST_matmult_m0_1;
  MOD_Reg<tUInt8> INST_matmult_m0_10;
  MOD_Reg<tUInt8> INST_matmult_m0_11;
  MOD_Reg<tUInt8> INST_matmult_m0_12;
  MOD_Reg<tUInt8> INST_matmult_m0_13;
  MOD_Reg<tUInt8> INST_matmult_m0_14;
  MOD_Reg<tUInt8> INST_matmult_m0_15;
  MOD_Reg<tUInt8> INST_matmult_m0_2;
  MOD_Reg<tUInt8> INST_matmult_m0_3;
  MOD_Reg<tUInt8> INST_matmult_m0_4;
  MOD_Reg<tUInt8> INST_matmult_m0_5;
  MOD_Reg<tUInt8> INST_matmult_m0_6;
  MOD_Reg<tUInt8> INST_matmult_m0_7;
  MOD_Reg<tUInt8> INST_matmult_m0_8;
  MOD_Reg<tUInt8> INST_matmult_m0_9;
  MOD_Reg<tUInt8> INST_matmult_m1_0;
  MOD_Reg<tUInt8> INST_matmult_m1_1;
  MOD_Reg<tUInt8> INST_matmult_m1_10;
  MOD_Reg<tUInt8> INST_matmult_m1_11;
  MOD_Reg<tUInt8> INST_matmult_m1_12;
  MOD_Reg<tUInt8> INST_matmult_m1_13;
  MOD_Reg<tUInt8> INST_matmult_m1_14;
  MOD_Reg<tUInt8> INST_matmult_m1_15;
  MOD_Reg<tUInt8> INST_matmult_m1_2;
  MOD_Reg<tUInt8> INST_matmult_m1_3;
  MOD_Reg<tUInt8> INST_matmult_m1_4;
  MOD_Reg<tUInt8> INST_matmult_m1_5;
  MOD_Reg<tUInt8> INST_matmult_m1_6;
  MOD_Reg<tUInt8> INST_matmult_m1_7;
  MOD_Reg<tUInt8> INST_matmult_m1_8;
  MOD_Reg<tUInt8> INST_matmult_m1_9;
  MOD_Fifo<tUWide> INST_matmult_matrix_in0;
  MOD_Fifo<tUWide> INST_matmult_matrix_in1;
  MOD_Fifo<tUWide> INST_matmult_matrix_out;
  MOD_Reg<tUInt8> INST_matmult_ret_val_0;
  MOD_Reg<tUInt8> INST_matmult_ret_val_1;
  MOD_Reg<tUInt8> INST_matmult_ret_val_10;
  MOD_Reg<tUInt8> INST_matmult_ret_val_11;
  MOD_Reg<tUInt8> INST_matmult_ret_val_12;
  MOD_Reg<tUInt8> INST_matmult_ret_val_13;
  MOD_Reg<tUInt8> INST_matmult_ret_val_14;
  MOD_Reg<tUInt8> INST_matmult_ret_val_15;
  MOD_Reg<tUInt8> INST_matmult_ret_val_2;
  MOD_Reg<tUInt8> INST_matmult_ret_val_3;
  MOD_Reg<tUInt8> INST_matmult_ret_val_4;
  MOD_Reg<tUInt8> INST_matmult_ret_val_5;
  MOD_Reg<tUInt8> INST_matmult_ret_val_6;
  MOD_Reg<tUInt8> INST_matmult_ret_val_7;
  MOD_Reg<tUInt8> INST_matmult_ret_val_8;
  MOD_Reg<tUInt8> INST_matmult_ret_val_9;
  MOD_Reg<tUInt8> INST_matmult_started;
  MOD_Reg<tUInt8> INST_matrix_vec_0;
  MOD_Reg<tUInt8> INST_matrix_vec_1;
  MOD_Reg<tUInt8> INST_matrix_vec_10;
  MOD_Reg<tUInt8> INST_matrix_vec_11;
  MOD_Reg<tUInt8> INST_matrix_vec_12;
  MOD_Reg<tUInt8> INST_matrix_vec_13;
  MOD_Reg<tUInt8> INST_matrix_vec_14;
  MOD_Reg<tUInt8> INST_matrix_vec_15;
  MOD_Reg<tUInt8> INST_matrix_vec_2;
  MOD_Reg<tUInt8> INST_matrix_vec_3;
  MOD_Reg<tUInt8> INST_matrix_vec_4;
  MOD_Reg<tUInt8> INST_matrix_vec_5;
  MOD_Reg<tUInt8> INST_matrix_vec_6;
  MOD_Reg<tUInt8> INST_matrix_vec_7;
  MOD_Reg<tUInt8> INST_matrix_vec_8;
  MOD_Reg<tUInt8> INST_matrix_vec_9;
  MOD_Reg<tUInt32> INST_row_select;
 
 /* Constructor */
 public:
  MOD_mkBBD(tSimStateHdl simHdl, char const *name, Module *parent);
 
 /* Symbol init methods */
 private:
  void init_symbols_0();
 
 /* Reset signal definitions */
 private:
  tUInt8 PORT_RST_N;
 
 /* Port definitions */
 public:
  tUInt8 PORT_EN_push_data;
  tUInt8 PORT_EN_get_data;
  tUInt32 PORT_push_data_d0;
  tUInt8 PORT_RDY_push_data;
  tUInt32 PORT_get_data;
  tUInt8 PORT_RDY_get_data;
 
 /* Publicly accessible definitions */
 public:
  tUInt8 DEF_WILL_FIRE_get_data;
  tUInt8 DEF_WILL_FIRE_push_data;
  tUInt8 DEF_WILL_FIRE_RL_matrix_in;
  tUInt8 DEF_CAN_FIRE_RL_matrix_in;
  tUInt8 DEF_WILL_FIRE_RL_matrix_mult;
  tUInt8 DEF_CAN_FIRE_RL_matrix_mult;
  tUInt8 DEF_WILL_FIRE_RL_matmult_finish_computation;
  tUInt8 DEF_CAN_FIRE_RL_matmult_finish_computation;
  tUInt8 DEF_WILL_FIRE_RL_matmult_do_computationl;
  tUInt8 DEF_CAN_FIRE_RL_matmult_do_computationl;
  tUInt8 DEF_WILL_FIRE_RL_matmult_start_computation;
  tUInt8 DEF_CAN_FIRE_RL_matmult_start_computation;
  tUInt8 DEF_CAN_FIRE_get_data;
  tUInt8 DEF_CAN_FIRE_push_data;
  tUInt32 DEF_x__h19045;
 
 /* Local definitions */
 private:
  tUWide DEF_matmult_matrix_in1_first____d24;
  tUWide DEF_matmult_matrix_in0_first____d7;
  tUWide DEF_matmult_ret_val_15_45_CONCAT_matmult_ret_val_1_ETC___d268;
  tUWide DEF_matmult_ret_val_15_45_CONCAT_matmult_ret_val_1_ETC___d265;
  tUWide DEF_matrix_vec_15_76_CONCAT_matrix_vec_14_77_78_CO_ETC___d299;
  tUWide DEF_matrix_vec_15_76_CONCAT_matrix_vec_14_77_78_CO_ETC___d296;
  tUWide DEF_matmult_ret_val_15_45_CONCAT_matmult_ret_val_1_ETC___d262;
  tUWide DEF_matrix_vec_15_76_CONCAT_matrix_vec_14_77_78_CO_ETC___d293;
  tUWide DEF_matmult_ret_val_15_45_CONCAT_matmult_ret_val_1_ETC___d259;
  tUWide DEF_matrix_vec_15_76_CONCAT_matrix_vec_14_77_78_CO_ETC___d290;
 
 /* Rules */
 public:
  void RL_matmult_start_computation();
  void RL_matmult_do_computationl();
  void RL_matmult_finish_computation();
  void RL_matrix_mult();
  void RL_matrix_in();
 
 /* Methods */
 public:
  void METH_push_data(tUInt32 ARG_push_data_d0);
  tUInt8 METH_RDY_push_data();
  tUInt32 METH_get_data();
  tUInt8 METH_RDY_get_data();
 
 /* Reset routines */
 public:
  void reset_RST_N(tUInt8 ARG_rst_in);
 
 /* Static handles to reset routines */
 public:
 
 /* Pointers to reset fns in parent module for asserting output resets */
 private:
 
 /* Functions for the parent module to register its reset fns */
 public:
 
 /* Functions to set the elaborated clock id */
 public:
  void set_clk_0(char const *s);
 
 /* State dumping routine */
 public:
  void dump_state(unsigned int indent);
 
 /* VCD dumping routines */
 public:
  unsigned int dump_VCD_defs(unsigned int levels);
  void dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkBBD &backing);
  void vcd_defs(tVCDDumpType dt, MOD_mkBBD &backing);
  void vcd_prims(tVCDDumpType dt, MOD_mkBBD &backing);
};

#endif /* ifndef __mkBBD_h__ */
